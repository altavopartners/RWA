# ========================================# ========================================

# SERVER CONFIGURATION# HEDERA TESTNET CONFIGURATION

# ========================================# ========================================

NODE_ENV=development# For production, use mainnet values

PORT=5000# For development/testing, use testnet values



# ========================================HEDERA_NETWORK=testnet

# DATABASE CONFIGURATION

# ========================================# Your Hedera Testnet Account ID (e.g., 0.0.XXXXXXXX)

# PostgreSQL credentials for Docker Compose# Get from: https://portal.hedera.com/

POSTGRES_USER=postgresHEDERA_ACCOUNT_ID=0.0.YOUR_ACCOUNT_ID

POSTGRES_PASSWORD=postgres

POSTGRES_DB=hexport# ED25519 Private Key in HEX format (64 characters = 32 bytes)

# Format: Do NOT include "0x" prefix

# PostgreSQL connection string# Example: e19294c52dde87cfd02836212667af627fadea731a4481566640f8b785ae0828

# Format: postgresql://user:password@host:port/databaseHEDERA_PRIVATE_KEY=your_ed25519_private_key_hex_here

DATABASE_URL=postgresql://postgres:postgres@localhost:5432/hexport

# Supply Key for NFT minting (ED25519, hex format, 64 chars)

# ========================================# If not provided, auto-generated during first NFT creation

# AUTHENTICATION & SECURITYHEDERA_SUPPLY_KEY=your_supply_key_hex_here

# ========================================

# JWT Secret Key (minimum 32 characters)# HCS (Hedera Consensus Service) Topic ID for event logging

# Generate: openssl rand -base64 32# Topic used for immutable audit trail of order events

JWT_SECRET=your_minimum_32_character_jwt_secret_key_here# Example: 0.0.28659765 (testnet topic for RWA project)

HEDERA_HCS_TOPIC_ID=0.0.28659765

# ========================================

# HEDERA TESTNET CONFIGURATION# Hedera Operator Key in DER format (for contract deployment)

# ========================================# Used by Hardhat for smart contract deployment

# For production, use mainnet valuesHEDERA_OPERATOR_KEY=your_operator_key_der_format

# For development/testing, use testnet values

HEDERA_NETWORK=testnet# ========================================

# DATABASE CONFIGURATION

# Your Hedera Testnet Account ID (e.g., 0.0.XXXXXXXX)# ========================================

# Get free testnet account: https://portal.hedera.com/

HEDERA_ACCOUNT_ID=0.0.YOUR_HEDERA_ACCOUNT_ID# PostgreSQL connection string

# Format: postgresql://user:password@host:port/database

# ED25519 Private Key in HEX format (64 characters = 32 bytes)# Local: postgresql://postgres:password@localhost:5432/rwa_db

# Format: Do NOT include "0x" prefix# Docker Compose: postgresql://postgres:password@db:5432/rwa_db

# Example: e19294c52dde87cfd02836212667af627fadea731a4481566640f8b785ae0828DATABASE_URL=postgresql://user:password@localhost:5432/rwa_db

HEDERA_PRIVATE_KEY=your_hedera_ed25519_private_key_hex_here

# ========================================

# Hedera Operator ID (usually same as HEDERA_ACCOUNT_ID)# AUTHENTICATION & SECURITY

HEDERA_OPERATOR_ID=0.0.YOUR_HEDERA_ACCOUNT_ID# ========================================



# ED25519 DER Encoded Private Key (for Hardhat smart contract deployment)# JWT Secret Key (use strong random string in production)

# Format: DER-encoded key (starts with 302e...)# Generate: openssl rand -base64 32

HEDERA_OPERATOR_KEY=302e020100300506032b657004220420your_der_encoded_key_hereJWT_SECRET=your_jwt_secret_key_min_32_chars



# Supply key for NFT minting (ED25519, hex format, 64 chars)# JWT Expiration (e.g., 7d, 24h, 30m)

# If not provided, a new key is generated for each NFTJWT_EXPIRY=7d

HEDERA_SUPPLY_KEY=

# CORS Origins (comma-separated for multiple domains)

# HCS (Hedera Consensus Service) Topic ID for event loggingCORS_ORIGINS=http://localhost:3000,http://localhost:3001

# Topic used for immutable audit trail of all order events

# Example: 0.0.6870936 (testnet topic for RWA project)# ========================================

HEDERA_HCS_TOPIC_ID=0.0.YOUR_HCS_TOPIC_ID# STORAGE & FILE UPLOADS

# ========================================

# Hedera Testnet RPC endpoint

HEDERA_TESTNET_RPC=https://testnet.hashio.io/api# Storacha/Web3 Delegation Proof (optional)

# For document uploads to W3 Storage

# ========================================W3_PROOF=your_storacha_delegation_proof_base64

# SMART CONTRACT - ESCROW CONFIGURATION

# ========================================# File upload directory (relative to server root)

# Escrow contract Ethereum-format account addressUPLOAD_DIR=./uploads

ESCROW_ACCOUNT=0x1Bd765b88ec476875f97b288A18172E2b7e2491b

# Max upload file size (in bytes, default 10MB)

# Escrow contract private key (Ethereum format, starts with 0x)MAX_FILE_SIZE=10485760

# This is the key that can call payment release functions

ESCROW_PRIVATE_KEY=0xyour_escrow_private_key_here# ========================================

# SERVER CONFIGURATION

# ========================================# ========================================

# FRONTEND CONFIGURATION

# ========================================# Server port

# CORS origin for frontend requestsPORT=4000

CORS_ORIGIN=http://localhost:3000

# Node environment (development, production, test)

# ========================================NODE_ENV=development

# STORACHA/WEB3 STORAGE CONFIGURATION (Optional)

# ========================================# Log level (error, warn, info, debug)

# Space DID from Storacha consoleLOG_LEVEL=info

# Get from: https://console.storacha.network/

W3_SPACE_DID=did:key:your_space_did_here# Enable verbose logging for debugging

DEBUG=false

# Private key for Storacha authorization (base64 format)

# Generated via: w3 key create# ========================================

W3_PRIVATE_KEY=your_base64_encoded_private_key_here# FRONTEND CONFIGURATION

# ========================================

# Delegation proof for Storacha (base64 encoded)

# Generated via: w3 delegation create ... --base64# API endpoint for frontend (NEXT_PUBLIC_ prefix makes it accessible in browser)

W3_PROOF_BASE64=your_base64_delegation_proof_hereNEXT_PUBLIC_API_URL=http://localhost:4000



# Storacha seed in hex format# Hedera network for frontend

STORACHA_SEED_HEX=your_storacha_seed_hex_hereNEXT_PUBLIC_NETWORK=testnet


# Expected agent DID for verification
EXPECTED_AGENT_DID=did:key:your_expected_agent_did

# IPFS Gateway URL for content retrieval
IPFS_GATEWAY_URL=https://up.storacha.network
