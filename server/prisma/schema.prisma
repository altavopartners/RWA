generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id            String   @id @default(cuid())
  walletAddress String   @unique
  accountId     String? @unique
  publicKeyHex  String?
  nonce         String?

  // Core identity
  fullName      String?
  email         String?  @unique
  phoneNumber   String?
  location      String?

  // Progressive profile
  profileImage  String?  // This is the IPFS CID
  businessName  String?
  businessDesc  String?

  userType      UserType @default(PRODUCER)
  isVerified    Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  lastLoginAt   DateTime?
  nonceIssuedAt DateTime?

  authSessions  AuthSession[]
  documents     Document[]
  dID           DID?     // This should reference the DID model
  
}


model AuthSession {
  id          String   @id @default(cuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  token       String
  refreshToken String?
  ipAddress   String?
  userAgent   String?
  expiresAt   DateTime?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Document {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  filename  String
  cid       String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model DID {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
  did       String
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
enum DocumentType {
  KYC_ID
  BUSINESS_LICENSE
  ORGANIC_CERT
  HALAL_CERT
  OTHER
}
//for escrow
enum KycStatus {
  PENDING
  SUBMITTED
  VERIFIED
  REJECTED
}
enum UserType {
  PRODUCER
  BUYER
  ADMIN
}

model Product {
  id            Int      @id @default(autoincrement())
  name          String
  quantity      Int
  unit          String
  pricePerUnit  Float
  countryOfOrigin String
  category      String
  subcategory   String?
  description   String
  hsCode        String?
  incoterm      String?
  minOrderQty   Int?
  leadTimeDays  Int?

  // JSON arrays for storing file paths or metadata
  images        Json?
  documents     Json?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
