services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./server
    ports:
      - "4000:4000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - PORT=4000
    volumes:
      - ./server:/app
    command:
      [
        "sh",
        "-c",
        "until pg_isready -h postgres -U ${POSTGRES_USER}; do echo 'waiting for postgres'; sleep 1; done; npm run dev",
      ]
    depends_on:
      - postgres

  frontend:
    build: ./client
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    volumes:
      - ./client:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - backend
    develop:
      watch:
        - action: sync
          path: ./client
          target: /app
          ignore:
            - node_modules/

volumes:
  postgres_data:
